"""
uipcalc test cases
"""

import ipaddress
import unittest

import uipcalc


addresses = [
    ('192.0.2.4/30',
     '11000000.00000000.00000010.00000100',
     '11111111.11111111.11111111.11111100'),

    ('192.0.2.0/32',
     '11000000.00000000.00000010.00000000',
     '11111111.11111111.11111111.11111111'),

    ('192.0.2.128/25',
     '11000000.00000000.00000010.10000000',
     '11111111.11111111.11111111.10000000'),

    ('192.0.2.64/26',
     '11000000.00000000.00000010.01000000',
     '11111111.11111111.11111111.11000000'),

    ('192.0.2.0/255.255.255.0',
     '11000000.00000000.00000010.00000000',
     '11111111.11111111.11111111.00000000'),

    ('2001:DB8::/32',

     '0010000000000001:0000110110111000:0000000000000000:0000000000000000:'
     '0000000000000000:0000000000000000:0000000000000000:0000000000000000',

     '1111111111111111:1111111111111111:0000000000000000:0000000000000000:'
     '0000000000000000:0000000000000000:0000000000000000:0000000000000000'),

    ('2001:DB8::/48',

     '0010000000000001:0000110110111000:0000000000000000:0000000000000000:'
     '0000000000000000:0000000000000000:0000000000000000:0000000000000000',

     '1111111111111111:1111111111111111:1111111111111111:0000000000000000:'
     '0000000000000000:0000000000000000:0000000000000000:0000000000000000'),

    ('2001:DB8::/50',

     '0010000000000001:0000110110111000:0000000000000000:0000000000000000:'
     '0000000000000000:0000000000000000:0000000000000000:0000000000000000',

     '1111111111111111:1111111111111111:1111111111111111:1100000000000000:'
     '0000000000000000:0000000000000000:0000000000000000:0000000000000000'),

    ('2001:DB8::/64',

     '0010000000000001:0000110110111000:0000000000000000:0000000000000000:'
     '0000000000000000:0000000000000000:0000000000000000:0000000000000000',

     '1111111111111111:1111111111111111:1111111111111111:1111111111111111:'
     '0000000000000000:0000000000000000:0000000000000000:0000000000000000'),

    ('2001:DB8::/96',

     '0010000000000001:0000110110111000:0000000000000000:0000000000000000:'
     '0000000000000000:0000000000000000:0000000000000000:0000000000000000',

     '1111111111111111:1111111111111111:1111111111111111:1111111111111111:'
     '1111111111111111:1111111111111111:0000000000000000:0000000000000000'),
]


def test_address_to_bin(a, ra, rm):
    # noinspection PyDocstring
    def test(self):
        net = ipaddress.ip_interface(a)
        addr = net.ip
        mask = net.netmask

        self.assertEqual(uipcalc.address_to_bin(addr), ra)
        self.assertEqual(uipcalc.address_to_bin(mask), rm)

    return test


class TestUIPCALC(unittest.TestCase):
    pass

for num, (address, repr_addr, repr_mask) in enumerate(addresses):
    setattr(TestUIPCALC, 'test_address_to_bin_{0}'.format(num),
            test_address_to_bin(address, repr_addr, repr_mask))


if __name__ == '__main__':
    unittest.main()
